/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
  &kp TAB  &kp Q  &kp W    &kp F       &kp P  &kp B           &kp J        &kp L      &kp U    &kp Y  &kp SEMI       &kp BSPC
  &kp ESC  &kp A  &kp R    &kp S       &kp T  &kp G           &kp M        &kp N      &kp E    &kp I     &kp O        &kp SQT
&kp LCTRL  &kp Z  &kp X    &kp C       &kp D  &kp V           &kp K        &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_ALT
                         &lt 1 0  &lt 1 BKSP         &lt 0 0         &lt 1 SPACE    &kp TAB
            >;
        };

        NAVIGATION {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       \     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET |     |     |

            bindings = <
&trans         &none           &none         &none             &none  &none             &none      &none     &none   &none      &none   &trans
&trans  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_CONTROL  &none          &kp HOME   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp END
&trans         &kp Z           &kp X         &kp C             &kp D  &kp V             &none  &kp PG_DN     &none   &none      &none    &none
                                            &trans            &trans         &trans               &trans    &trans
            >;
        };

        SYMBOLS {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans     &kp N1     &kp N2    &kp N3    &kp N4    &kp N5            &kp N6  &kp N7  &kp N8   &kp N9   &kp N0  &kp DEL
&trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH            &kp F1  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6
&trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK   &kp DQT            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                &trans     &mo 3            &kp BSPC          &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
          &none            &none            &none            &none   &none            &none                &reset         &none         &none         &none         &none       &none
                                                            &trans  &trans                   &tog 3                      &trans        &trans
            >;
        };
    };
};
